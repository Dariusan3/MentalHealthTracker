@using Microsoft.AspNetCore.Components.Web
@namespace MentalHealthTracker.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="ro">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Mental Health Tracker - AplicaÈ›ie pentru monitorizarea È™i Ã®mbunÄƒtÄƒÈ›irea sÄƒnÄƒtÄƒÈ›ii tale mentale" />
    <meta name="keywords" content="sÄƒnÄƒtate mentalÄƒ, jurnal, stare de spirit, monitorizare, wellbeing" />
    <meta name="author" content="Mental Health Tracker Team" />
    <base href="~/" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
    <link href="css/site.css" rel="stylesheet" />
    <link href="MentalHealthTracker.styles.css" rel="stylesheet" />
    <link rel="icon" type="image/png" href="favicon.png"/>
    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            A apÄƒrut o eroare. AplicaÈ›ia nu va mai rÄƒspunde pÃ¢nÄƒ la reÃ®ncÄƒrcare.
        </environment>
        <environment include="Development">
            A apÄƒrut o excepÈ›ie neaÈ™teptatÄƒ. VerificaÈ›i consola de dezvoltare pentru detalii.
        </environment>
        <a href="" class="reload">ReÃ®ncarcÄƒ</a>
        <a class="dismiss">ğŸ—™</a>
    </div>

    <script src="_framework/blazor.server.js"></script>
    <script src="_content/MudBlazor/MudBlazor.min.js"></script>
    <script src="js/auth.js"></script>
    <script src="js/site.js"></script>
    <script src="js/auth-sync.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="js/chart-utils.js"></script>
    <script>
        // VerificÄƒm dacÄƒ authHelpers este disponibil
        document.addEventListener('DOMContentLoaded', function() {
            console.log('Verificare disponibilitate authHelpers:');
            console.log('authHelpers:', window.authHelpers);
            console.log('saveAuthState:', window.authHelpers?.saveAuthState);
            console.log('checkLoginSuccess:', window.authHelpers?.checkLoginSuccess);
            
            // AdÄƒugÄƒm o funcÈ›ie globalÄƒ pentru a verifica starea de autentificare
            window.checkLocalAuthState = function() {
                if (window.authHelpers && window.authHelpers.getLocalAuthState) {
                    return window.authHelpers.getLocalAuthState();
                } else {
                    return {
                        isAuthenticated: localStorage.getItem('isAuthenticated') === 'true',
                        userId: localStorage.getItem('userId'),
                        userName: localStorage.getItem('userName')
                    };
                }
            };
        });
    </script>
</body>
</html> 